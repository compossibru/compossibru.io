AWSTemplateFormatVersion: 2010-09-09
Parameters:
  HostedZoneId:
    Type: String
  AcmCertificateArn:
    Type: String
  DNSName:
    Type: String
  RedirectDNSName:
    Type: String
Resources:
  S3Bucket:
    Type: AWS::S3::Bucket
    DeletionPolicy: Delete
    Properties:
      AccessControl: PublicRead
      WebsiteConfiguration:
        IndexDocument: index.html
        ErrorDocument: index.html

  S3BucketPolicy:
    Type: AWS::S3::BucketPolicy
    Properties:
      Bucket: !Ref S3Bucket
      PolicyDocument:
        Statement:
          - Sid: PublicReadForGetBucketObjects
            Effect: Allow
            Principal: '*'
            Action: s3:GetObject
            Resource: !Sub arn:aws:s3:::${S3Bucket}/*

  S3RedirectBucket:
    Type: AWS::S3::Bucket
    DeletionPolicy: Delete
    Properties:
      WebsiteConfiguration:
        RedirectAllRequestsTo:
          HostName: !Ref DNSName

  CloudFront:
    Type: AWS::CloudFront::Distribution
    DependsOn:
      - S3Bucket
    Properties:
      DistributionConfig:
        Origins:
          - Id: S3Origin
            DomainName: !Sub ${BucketName}.s3-website-${AWS::Region}.amazonaws.com
            CustomOriginConfig:
              HTTPPort: 80
              HTTPSPort: 443
              OriginProtocolPolicy: http-only
        Enabled: true
        HttpVersion: http2
        Aliases:
          - !Ref DNSName
        DefaultCacheBehavior:
          AllowedMethods:
            - GET
            - HEAD
          Compress: true
          TargetOriginId: S3Origin
          ForwardedValues:
            QueryString: true
            Cookies:
              Forward: none
          ViewerProtocolPolicy: redirect-to-https
        CustomErrorResponses:
          - ErrorCode: 404
            ResponseCode: 200
            ResponsePagePath: /index.html
        PriceClass: PriceClass_All
        ViewerCertificate:
          AcmCertificateArn: !Ref AcmCertificateArn
          SslSupportMethod: sni-only

  CloudFrontRedirect:
    Type: AWS::CloudFront::Distribution
    DependsOn:
      - S3RedirectBucket
    Properties:
      DistributionConfig:
        Origins:
          - Id: S3Origin
            DomainName: !Sub ${BucketName}-redirect.s3-website-${AWS::Region}.amazonaws.com
            CustomOriginConfig:
              HTTPPort: 80
              HTTPSPort: 443
              OriginProtocolPolicy: http-only
        Enabled: true
        HttpVersion: http2
        Aliases:
          - !Ref RedirectDNSName
        DefaultCacheBehavior:
          AllowedMethods:
            - GET
            - HEAD
          Compress: true
          TargetOriginId: S3Origin
          ForwardedValues:
            QueryString: true
            Cookies:
              Forward: none
          ViewerProtocolPolicy: redirect-to-https
        PriceClass: PriceClass_All
        ViewerCertificate:
          AcmCertificateArn: !Ref AcmCertificateArn
          SslSupportMethod: sni-only

  # HostedZoneId: For CloudFront, use Z2FDTNDATAQYW2.
  WebsiteRecordSet:
    Type: AWS::Route53::RecordSetGroup
    DependsOn:
      - CloudFront
      - CloudFrontRedirect
    Properties:
      HostedZoneId: !Ref HostedZoneId
      RecordSets:
        - Name: !Ref DNSName
          Type: A
          AliasTarget:
            HostedZoneId: Z2FDTNDATAQYW2
            DNSName: !GetAtt CloudFront.DomainName
        - Name: !Ref RedirectDNSName
          Type: A
          AliasTarget:
            HostedZoneId: Z2FDTNDATAQYW2
            DNSName: !GetAtt CloudFrontRedirect.DomainName

Outputs:
  CloudFrontDistributionID:
    Value: !Ref CloudFront
  CloudFrontRedirectDistributionID:
    Value: !Ref CloudFrontRedirect
