AWSTemplateFormatVersion: 2010-09-09
Parameters:
  GitHubRepoOwner:
    Type: String
    Default: compossibru
  GitHubRepoName:
    Type: String
    Default: compossibru.io
  GitHubRepoBranch:
    Type: String
    Default: master
  GitHubOauthToken:
    Type: String
    NoEcho: true
  BucketName:
    Type: String
  HostedZoneId:
    Type: AWS::Route53::HostedZone::Id
  DNSName:
    Type: String
  RedirectDNSName:
    Type: String
  AcmCertificateArn:
    Type: String
  ArtifactStoreBucket:
    Type: String
Metadata:
  AWS::CloudFormation::Interface:
    ParameterGroups:
      - Label:
          default: Source-Code Configurations
        Parameters:
          - GitHubRepoOwner
          - GitHubRepoName
          - GitHubRepoBranch
          - GitHubOauthToken
      - Label:
          default: Infrastructure Configurations
        Parameters:
          - BucketName
          - HostedZoneId
          - DNSName
          - RedirectDNSName
          - AcmCertificateArn
          - ArtifactStoreBucket
Resources:
  PipelineTrustRole:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Version: 2012-10-17
        Statement:
          - Effect: Allow
            Principal:
              Service: codepipeline.amazonaws.com
            Action: sts:AssumeRole
      ManagedPolicyArns:
        - arn:aws:iam::aws:policy/AdministratorAccess # change this!!!

  BuildRole:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Version: 2012-10-17
        Statement:
          Effect: Allow
          Principal:
            Service: codebuild.amazonaws.com
          Action: sts:AssumeRole
      ManagedPolicyArns:
        - arn:aws:iam::aws:policy/AdministratorAccess # change this!!!

  CloudFormationTrustRole:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Version: 2012-10-17
        Statement:
          Effect: Allow
          Principal:
            Service: cloudformation.amazonaws.com
          Action: sts:AssumeRole
      ManagedPolicyArns:
        - arn:aws:iam::aws:policy/AdministratorAccess # change this!!!

  Pipeline:
    Type: AWS::CodePipeline::Pipeline
    Properties:
      RoleArn: !GetAtt PipelineTrustRole.Arn
      ArtifactStore:
        Location: !Ref ArtifactStoreBucket
        Type: S3
      Stages:
        - Name: Source
          Actions:
            - Name: Source
              ActionTypeId:
                Category: Source
                Owner: ThirdParty
                Version: 1
                Provider: GitHub
              Configuration:
                Owner: !Ref GitHubRepoOwner
                Repo: !Ref GitHubRepoName
                Branch: !Ref GitHubRepoBranch
                OAuthToken: !Ref GitHubOauthToken
              InputArtifacts: []
              OutputArtifacts:
                - Name: SourceOutput
              RunOrder: 1
        - Name: Build
          Actions:
            - Name: Build
              ActionTypeId:
                Category: Build
                Owner: AWS
                Version: 1
                Provider: CodeBuild
              Configuration:
                ProjectName: !Ref Build
              InputArtifacts:
                - Name: SourceOutput
              OutputArtifacts:
                - Name: BuildOutput
              RunOrder: 1
        - Name: Deploy
          Actions:
            - Name: Prepare-Infrastructure
              ActionTypeId:
                Category: Deploy
                Owner: AWS
                Version: 1
                Provider: CloudFormation
              Configuration:
                ActionMode: CREATE_UPDATE
                Capabilities: CAPABILITY_IAM
                StackName: !Sub ${AWS::StackName}-Infrastructure
                RoleArn: !GetAtt CloudFormationTrustRole.Arn
                TemplatePath: BuildOutput::infrastructure.yml
                ParameterOverrides:
                  !Sub |
                    {
                      "BucketName": "${BucketName}",
                      "HostedZoneId": "${HostedZoneId}",
                      "DNSName": "${DNSName}",
                      "RedirectDNSName": "${RedirectDNSName}",
                      "AcmCertificateArn": "${AcmCertificateArn}"
                    }
              InputArtifacts:
                - Name: BuildOutput
              OutputArtifacts: []
              RunOrder: 1
            - Name: Deploy
              ActionTypeId:
                Category: Build
                Owner: AWS
                Version: 1
                Provider: CodeBuild
              Configuration:
                ProjectName: !Ref Deploy
              InputArtifacts:
                - Name: BuildOutput
              OutputArtifacts: []
              RunOrder: 2

  Build:
    Type: AWS::CodeBuild::Project
    Properties:
      Artifacts:
        Type: CODEPIPELINE
      Environment:
        ComputeType: BUILD_GENERAL1_SMALL
        Image: aws/codebuild/nodejs:10.1.0
        Type: LINUX_CONTAINER
      Name: !Sub ${AWS::StackName}-Build
      ServiceRole: !Ref BuildRole
      Source:
        Type: CODEPIPELINE
        BuildSpec:
          !Sub |
          version: 0.2
          phases:
            build:
              commands:
                - npm install
                - npx compossibru build
          artifacts:
            files:
              - './infrastructure.yml'
              - './out/**/*'

  Deploy:
    Type: AWS::CodeBuild::Project
    Properties:
      Artifacts:
        Type: CODEPIPELINE
      Environment:
        ComputeType: BUILD_GENERAL1_SMALL
        Image: aws/codebuild/nodejs:10.1.0
        Type: LINUX_CONTAINER
      Name: !Sub ${AWS::StackName}-Deploy
      ServiceRole: !Ref BuildRole
      Source:
        Type: CODEPIPELINE
        BuildSpec:
          !Sub |
          version: 0.2
          phases:
            build:
              commands:
                - aws s3 sync ./out/ s3://${BucketName} --delete
